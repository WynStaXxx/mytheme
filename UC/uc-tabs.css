/* controls the appearance of individual tabs and elements inside a tab. */

/* different tab background colors in various states */
.tabbrowser-tab:not([selected]):is(:hover, .keyboard-focused-tab) .tab-background {
    background: var(--tab-hover) !important;
}

.tabbrowser-tab:is([visuallyselected], [selected]) .tab-background {
    background: var(--tab-selected) !important;
}

.tabbrowser-tab:focus:not([aria-activedescendant]) > .tab-stack > .tab-background,
.tabbrowser-tab.keyboard-focused-tab[selected] > .tab-stack > .tab-background {
    background: var(--tab-focused-hover) !important;
}

.tabbrowser-tab:not([selected])[pinned]:is(:hover, .keyboard-focused-tab) .tab-background {
    background: var(--tab-pinned-hover) !important;
}

.tabbrowser-tab:not([selected], [pinned], [multiselected], :hover, .keyboard-focused-tab)
    .tab-background {
    background: var(--tab-background) !important;
}

.tabbrowser-tab:not([selected])[pinned] .tab-background {
    background: var(--tab-pinned) !important;
}

.tabbrowser-tab[multiselected]:not([selected], [pinned], :hover, .keyboard-focused-tab)
    :is(.tab-background, .tab-background-inner) {
    background: var(--tab-multi) !important;
}

.tabbrowser-tab[multiselected]:not([selected], [pinned]):is(:hover, .keyboard-focused-tab)
    .tab-background {
    background: var(--tab-multi-hover) !important;
}

.tab-background[multiselected="true"]:not([selected="true"]) > .tab-background-inner {
    background: initial !important;
    opacity: initial !important;
}

/* optimize tab drag/drop  movement */
#tabbrowser-tabs[movingtab] .tabbrowser-tab[selected],
#tabbrowser-tabs .tabbrowser-tab[justmoved] {
    will-change: transform;
}

/* block our animations while tabs are being dragged & dropped */
#tabbrowser-tabs[movingtab] .tabbrowser-tab *,
#tabbrowser-tabs .tabbrowser-tab[justmoved] * {
    transform: none !important;
}

.tab-background {
    border: none !important;
    border-radius: 0 !important;
    box-shadow: none !important;
    opacity: 1 !important;
    z-index: 1;
}

/* different tab shadows in various states. to produce the illusion of modulated depth */
.tabbrowser-tab .tab-content {
    box-shadow: 0px 0px 15px 0px hsla(0, 0%, 0%, 0.2), 0px 0px 5px 0px hsla(0, 0%, 0%, 0.1);
}

.tabbrowser-tab:not([selected], [multiselected]):is(:hover, .keyboard-focused-tab) .tab-content,
.tabbrowser-tab:is([multiselected], [pinned]) .tab-content {
    box-shadow: 0px 0px 20px 1px rgba(0, 0, 0, 0.1), 0px 0px 15px 0px hsla(0, 0%, 0%, 0.25) !important;
}

.tabbrowser-tab[selected] .tab-content,
.tabbrowser-tab:is([multiselected], [pinned])[selected] .tab-content {
    box-shadow: 0px 0px 20px 1px rgba(0, 0, 0, 0.1), 0px 0px 15px 0px hsla(0, 0%, 0%, 0.35) !important;
}

.tabbrowser-tab:focus:not([aria-activedescendant]) .tab-content {
    box-shadow: 0px 0px 25px 3px rgba(0, 0, 0, 0.1), 0px 0px 15px 0px hsla(0, 0%, 0%, 0.35) !important;
}

/* colored lines on container tabs */
.tabbrowser-tab[usercontextid] .tab-context-line {
    background: var(--identity-tab-color) !important;
    height: 1px !important;
    margin-bottom: 0 !important;
}

.tabbrowser-tab[usercontextid] .tab-context-line {
    opacity: 0 !important;
    transition: none !important;
}

.tabbrowser-tab[usercontextid]:is(:hover, [selected], [multiselected], .keyboard-focused-tab)
    .tab-context-line {
    transform: none;
    opacity: 1 !important;
}

/* purple line on multiselected tabs */
#TabsToolbar .tabbrowser-tab[multiselected="true"] .tab-context-line {
    min-height: 1px !important;
    background-color: var(--multiselected-color) !important;
}

.tabbrowser-tab .tab-line,
.tabbrowser-tab .tab-context-line {
    display: -moz-box !important;
    -moz-box-ordinal-group: 2 !important;
    height: 1px !important;
    margin: 0 !important;
    opacity: 1 !important;
    transition: none !important;
}

.tabbrowser-tab:not([multiselected]) .tab-line,
.tabbrowser-tab:not([usercontextid], [multiselected]) .tab-context-line {
    display: none !important;
}

.tab-label[attention]:not([selected="true"]) {
    font-weight: unset !important;
}

.tabbrowser-tab:is([image], [pinned]) > .tab-stack > .tab-content[attention]:not([selected="true"]),
.tabbrowser-tab > .tab-stack > .tab-content[pinned][titlechanged]:not([selected="true"]) {
    background-image: unset !important;
    background-position: unset !important;
    background-repeat: unset !important;
}

/* dim unloaded/discarded tabs */
.tabbrowser-tab[pending] .tab-content :is(.tab-icon-image, .tab-label, .tab-sharing-icon-overlay) {
    opacity: 0.7;
}

.tabbrowser-tab[pending]:is(:hover, .keyboard-focused-tab)
    .tab-content
    :is(.tab-icon-image, .tab-label, .tab-sharing-icon-overlay) {
    opacity: 0.8;
}

/* highlight unread tabs; requires italicizeUnreadTabs.uc.js */
:root[italic-unread-tabs] .tabbrowser-tab[notselectedsinceload]:not([pending]),
:root[italic-unread-tabs] .tabbrowser-tab[notselectedsinceload][pending][busy] {
    font-style: italic !important;
}

/* tab top border roundness */
#TabsToolbar .tabbrowser-tab,
#TabsToolbar .tabbrowser-tab :is(.tab-stack, .tab-background, .tab-content, .tab-loading-burst) {
    border-top-right-radius: 5px !important;
    border-top-left-radius: 5px !important;
    overflow: hidden;
}

#TabsToolbar .tabbrowser-tab[selected],
#TabsToolbar
    .tabbrowser-tab[selected]
    :is(.tab-stack, .tab-background, .tab-content, .tab-loading-burst) {
    border-top-right-radius: 5px !important;
    border-top-left-radius: 5px !important;
}

#TabsToolbar .tabbrowser-tab[multiselected]:not([pinned]),
#TabsToolbar
    .tabbrowser-tab[multiselected]:not([pinned])
    :is(.tab-stack, .tab-background, .tab-content, .tab-loading-burst) {
    border-top-left-radius: 5px !important;
    border-top-right-radius: 5px !important;
}

#TabsToolbar .tabbrowser-tab:not([selected]):is(:hover, .keyboard-focused-tab),
#TabsToolbar
    .tabbrowser-tab:not([selected]):is(:hover, .keyboard-focused-tab)
    :is(.tab-stack, .tab-background, .tab-content, .tab-loading-burst) {
    border-top-right-radius: 5px !important;
}

/* unround top left/right corner for first/last tab.
this is complicated because we don't want to unround a tab unless it's really in place as the first/last tab.
that means we don't unround tabs when 1) a tab is being dragged/dropped, 2) a tab is being moved by an animation,
or 3) tabs are being closed from the end and the mouse is still in the navbar,
because in this condition tabs are prevented from flexing to the end by the closing tabs spacer, until mouse leaves the navbar. */
#TabsToolbar
    #tabbrowser-tabs:not([using-closing-tabs-spacer])
    .tabbrowser-tab[last-visible-tab]:not([justmoved], [style*="transform"]),
#TabsToolbar
    #tabbrowser-tabs:not([using-closing-tabs-spacer])
    .tabbrowser-tab[last-visible-tab]:not([justmoved], [style*="transform"])
    :is(.tab-stack, .tab-background, .tab-content, .tab-loading-burst),
#TabsToolbar
    #tabbrowser-tabs:not([using-closing-tabs-spacer])
    .tabbrowser-tab[last-visible-tab]:not([justmoved], [style*="transform"]):is(:hover, .keyboard-focused-tab),
#TabsToolbar
    #tabbrowser-tabs:not([using-closing-tabs-spacer])
    .tabbrowser-tab[last-visible-tab]:not([justmoved], [style*="transform"]):is(:hover, .keyboard-focused-tab)
    :is(.tab-stack, .tab-background, .tab-content, .tab-loading-burst) {
    border-top-right-radius: 0 !important;
}

#TabsToolbar
    #tabbrowser-tabs:not([using-closing-tabs-spacer])
    .tabbrowser-tab[first-visible-tab]:not([justmoved], [style*="transform"]),
#TabsToolbar
    #tabbrowser-tabs:not([using-closing-tabs-spacer])
    .tabbrowser-tab[first-visible-tab]:not([justmoved], [style*="transform"])
    :is(.tab-stack, .tab-background, .tab-content, .tab-loading-burst),
#TabsToolbar
    #tabbrowser-tabs:not([using-closing-tabs-spacer])
    .tabbrowser-tab[first-visible-tab]:not([justmoved], [style*="transform"]):is(:hover, .keyboard-focused-tab),
#TabsToolbar
    #tabbrowser-tabs:not([using-closing-tabs-spacer])
    .tabbrowser-tab[first-visible-tab]:not([justmoved], [style*="transform"]):is(:hover, .keyboard-focused-tab)
    :is(.tab-stack, .tab-background, .tab-content, .tab-loading-burst) {
    border-top-left-radius: 0 !important;
}

/* set rounded outside corners on tabs so they look like folder labels.
you can disable this by making a new pref in about:config and setting it to true: "userChrome.tabs.rounded-outer-corners.disabled"
this CSS is complicated because the outside corner needs to take on the color of the tab,
but it's not part of the tab background so it doesn't do so automatically. */

/* overflow needs to be visible since the corners need to be outside the bounding box of the tab,
otherwise they won't overlap with other tabs, they'll just push tabs 10px away from each other, and from the edge of the tab bar. */
#TabsToolbar .tabbrowser-tab,
#TabsToolbar .tabbrowser-tab .tab-stack {
    overflow: visible;
}

.tabbrowser-tab .tab-stack:before,
.tabbrowser-tab .tab-stack:after {
    bottom: 0;
    content: "";
    display: block;
    position: absolute;
    pointer-events: none;
    width: 5px;
    height: 5px;
    z-index: 2;
}

.tabbrowser-tab .tab-stack:before {
    mask: url(chrome://userchrome/content/skin/tab-corner-mask-left.svg) 0/100% 100%,
        linear-gradient(#fff, #fff);
    mask-composite: exclude;
    left: -5px;
}

.tabbrowser-tab .tab-stack:after {
    mask: url(chrome://userchrome/content/skin/tab-corner-mask-right.svg) 0/100% 100%,
        linear-gradient(#fff, #fff);
    mask-composite: exclude;
    right: -5px;
}

.tabbrowser-tab[usercontextid]:is(:hover, .keyboard-focused-tab, [selected], [visuallyselected]):not([multiselected])
    .tab-stack:before {
    left: -4.6px;
}

.tabbrowser-tab[usercontextid]:is(:hover, .keyboard-focused-tab, [selected], [visuallyselected]):not([multiselected])
    .tab-stack:after {
    right: -4.6px;
}

/* z-index of these corners is very complicated because the z-index of other elements needs to be set directly,
to create the impression that tabs are layering on top of each other, with rightmost tabs on top and leftmost tabs on bottom.
this is the normal state but hovering, selecting, pinning, etc. needs to change the z-index so tabs can "pop out" of the stack.
so because z-index is being modulated so heavily we need to do the same with our outside corners,
or else they'll end up being covered up or showing through things they shouldn't. */
.tabbrowser-tab :is(.tab-line, .tab-context-line) {
    z-index: 3;
    position: relative !important;
}

.tabbrowser-tab {
    z-index: 0;
}

.tabbrowser-tab .tab-content {
    z-index: 1;
}

.tabbrowser-tab[pinned] .tab-stack:before,
.tabbrowser-tab[pinned] .tab-stack:after {
    z-index: 6;
}

/* hide the corners on first/last visible tabs, just like we unround the top corners */
#tabbrowser-tabs:not([movingtab], [using-closing-tabs-spacer])
    .tabbrowser-tab[first-visible-tab]:not([justmoved], [style*="transform"])
    .tab-stack:before,
#tabbrowser-tabs:not([movingtab], [using-closing-tabs-spacer])
    .tabbrowser-tab[last-visible-tab]:not([justmoved], [style*="transform"])
    .tab-stack:after {
    display: none;
}

/* how the background color is applied. it's not as convoluted as it looks,
it needs to be a gradient image because the bottom line .tab-context-line overlaps with the outside corners.
we want the corners to take on the color of the bottom line, but the corners are taller than the bottom line, so they can't be fully the same color as the line.
they must have a 1px tall stripe at the bottom, the color of the bottom line (should it exist), with the remaining 4px being the current bg color of the tab. */
.tabbrowser-tab:not([selected], [multiselected]) .tab-stack:after,
.tabbrowser-tab:not([selected], [multiselected]) .tab-stack:before {
    background-image: linear-gradient(var(--tab-bg-current), var(--tab-bg-current));
}

.tabbrowser-tab[selected] .tab-stack:after,
.tabbrowser-tab[selected] .tab-stack:before {
    background-image: linear-gradient(var(--tab-bg-current), var(--tab-bg-current));
}

.tabbrowser-tab[multiselected] .tab-stack:after,
.tabbrowser-tab[multiselected] .tab-stack:before {
    background-image: linear-gradient(
        0deg,
        var(--multiselected-color) 0px,
        var(--multiselected-color) 1px,
        var(--tab-bg-current) 1px
    );
}

.tabbrowser-tab[usercontextid]:is([selected], :hover, .keyboard-focused-tab) .tab-stack:after,
.tabbrowser-tab[usercontextid]:is([selected], :hover, .keyboard-focused-tab) .tab-stack:before {
    background-image: linear-gradient(
        0deg,
        var(--identity-tab-color) 0px,
        var(--identity-tab-color) 1px,
        var(--tab-bg-current) 1px
    );
}

.tabbrowser-tab[usercontextid][multiselected] .tab-stack:after,
.tabbrowser-tab[usercontextid][multiselected] .tab-stack:before {
    background-image: linear-gradient(
        0deg,
        var(--multiselected-color) 0px,
        var(--multiselected-color) 1px,
        var(--tab-bg-current) 1px
    );
}

/* the corners inherit these variables from the tab, just like they do with --identity-tab-color */
.tabbrowser-tab:not([selected], [pinned]) {
    --tab-bg-current: var(--lwt-accent-color);
}

.tabbrowser-tab[selected],
.tabbrowser-tab[pinned]:not([selected]) {
    --tab-bg-current: var(--toolbar-bgcolor);
}

.tabbrowser-tab:not([selected], [pinned], [multiselected]):is(:hover, .keyboard-focused-tab) {
    --tab-bg-current: hsl(233, 55%, 8%);
}

.tabbrowser-tab[multiselected]:not([selected], [pinned]) {
    --tab-bg-current: hsl(233, 53%, 8%);
}

.tabbrowser-tab[multiselected]:not([selected], [pinned]):is(:hover, .keyboard-focused-tab) {
    --tab-bg-current: hsl(233, 51%, 10%);
}

/* disable the corners if the pref is enabled */
@supports -moz-bool-pref("userChrome.tabs.rounded-outer-corners.disabled") {
    .tabbrowser-tab .tab-stack:before,
    .tabbrowser-tab .tab-stack:after {
        display: none;
    }

    #TabsToolbar .tabbrowser-tab,
    #TabsToolbar .tabbrowser-tab .tab-stack {
        overflow: hidden;
    }
}

/* style the loading burst that triggers when tab loading finishes */
.tab-loading-burst {
    z-index: 2;
    pointer-events: none;
}

#tabbrowser-tabs[movingtab] .tabbrowser-tab[pinned][last-visible-tab] .tab-loading-burst::before,
.tabbrowser-tab[pinned][last-visible-tab]:is([justmoved], [tab-grouping], [tabdrop-samewindow]),
.tabbrowser-tab:not([last-visible-tab]) .tab-loading-burst[pinned]::before {
    margin-inline-start: calc(
        (var(--pinned-tab-width) / 2) - (var(--pinned-tab-width) * 0.05)
    ) !important;
    width: calc(var(--pinned-tab-width) * 0.05) !important;
}

#TabsToolbar .tab-loading-burst::before {
    backface-visibility: hidden;
}

/* this is all the convoluted z-index stuff I was talking about — how tab depth is controlled. */

/* default position is for tabs to be stacked on top of the tab to their left.
so shadows are cast to the left but not to the right. */
.tabbrowser-tab {
    position: relative;
}

/* hovered tabs stack on top of normal tabs in either direction.
so shadows are cast in both directions, unless the neighboring tab is selected or something. */
.tabbrowser-tab:not([selected], [pinned], [multiselected]):is(:hover, .keyboard-focused-tab) {
    z-index: 3 !important;
}

/* selected tabs stack over hovered tabs */
.tabbrowser-tab[selected] {
    z-index: 5 !important;
}

/* multiselected tabs do too, but lower than selected tabs */
.tabbrowser-tab[multiselected] {
    z-index: 4 !important;
}

/* multiselected gets 1 extra point for being hovered */
.tabbrowser-tab[multiselected]:not([selected], [pinned]):is(:hover, .keyboard-focused-tab) {
    z-index: 5 !important;
}

/* 2 points for being selected */
.tabbrowser-tab[multiselected][selected] {
    z-index: 6 !important;
}

/* pinned tabs stack over everything */
.tabbrowser-tab[pinned] {
    z-index: 7 !important;
}

/* and the same formula applies to them too */
.tabbrowser-tab[pinned]:not([selected], [multiselected]):is(:hover, .keyboard-focused-tab) {
    z-index: 8 !important;
}

.tabbrowser-tab[pinned][selected],
.tabbrowser-tab[pinned][multiselected] {
    z-index: 9 !important;
}

.tabbrowser-tab[pinned][multiselected]:not([selected]):is(:hover, .keyboard-focused-tab) {
    z-index: 10 !important;
}

/* the pinnacle of z-index, the pinned, selected, multiselected tab lol */
.tabbrowser-tab[pinned][selected][multiselected] {
    z-index: 11 !important;
}

/* pinned tabs should style just like regular tabs except without labels and buttons */
#tabbrowser-tabs[positionpinnedtabs]
    > #tabbrowser-arrowscrollbox
    > .tabbrowser-tab[pinned]
    > .tab-stack {
    border-inline: none !important;
}

#tabbrowser-tabs[positionpinnedtabs]
    > .tabbrowser-arrowscrollbox
    > .tabbrowser-tab[pinned]
    > .tab-stack {
    border: none !important;
}

/* we don't need the icon overlay since we restore the sound icon with javascript & manifest */
.tab-icon-overlay {
    display: none !important;
}

/* tab buttons are generally styled the same */
.tab-close-button,
.tab-icon-sound:not([pictureinpicture]) {
    opacity: 0 !important;
    fill: white !important;
    fill-opacity: 0 !important;
    border-radius: 50% !important;
}

.tab-close-button:hover {
    opacity: 1 !important;
}

.tab-icon-sound:is([soundplaying], [muted]) {
    padding: 0 !important;
}

.tab-icon-sound:is([soundplaying], [muted], [pictureinpicture], [activemedia-blocked]) {
    width: 16px !important;
    height: 16px !important;
}

.tab-icon-sound {
    -moz-context-properties: fill !important;
    -moz-box-ordinal-group: 2 !important;
    fill: currentColor !important;
    list-style-image: none !important;
    background-image: url(chrome://userchrome/content/audioUnmutedButton.svg) !important;
    background-size: 12px !important;
    background-position: center !important;
    background-repeat: no-repeat !important;
    list-style-image: none !important;
}

.tab-icon-sound[muted] {
    background-image: url(chrome://userchrome/content/audioMutedButton.svg) !important;
    background-size: 12px !important;
    background-position: center !important;
    background-repeat: no-repeat !important;
    list-style-image: none !important;
}

.tab-icon-sound[activemedia-blocked],
.tab-icon-sound[activemedia-blocked]:hover {
    width: 16px !important;
    height: 16px !important;
    padding: 0 !important;
    background-image: url(chrome://userchrome/content/glyph-play-12.svg) !important;
    background-size: 8px !important;
    background-position: 4.5px center !important;
    background-repeat: no-repeat !important;
}

:is(.tab-icon-sound, .tab-close-button):hover {
    background-color: var(--arrowpanel-dimmed) !important;
    opacity: 1 !important;
}

.tabbrowser-tab:is(:hover, .keyboard-focused-tab)
    :is(.tab-icon-sound, .tab-close-button):not(:hover) {
    opacity: 0.6 !important;
}

.tabbrowser-tab:is(:hover, .keyboard-focused-tab)
    :is(.tab-icon-sound, .tab-close-button):hover:active {
    background-color: var(--arrowpanel-dimmed-further) !important;
    opacity: 1 !important;
}

/* for the picture in picture button to mute/unmute tabs with proton, you need to follow the restore tab sound button instructions on my repo's readme */
.tabbrowser-tab:not(:hover, .keyboard-focused-tab) .tab-icon-sound[pictureinpicture] {
    background-image: url(chrome://userchrome/content/tab-picture-in-picture.svg) !important;
    background-size: 12px !important;
    background-position: center !important;
    background-repeat: no-repeat !important;
}

.tab-icon-sound:is([soundplaying], [muted], [activemedia-blocked], [pictureinpicture]):not(:hover) {
    opacity: 0.6 !important;
}

:root:not([customizing])
    .tab-icon-sound:is([soundplaying], [muted], [activemedia-blocked], [pictureinpicture]):not(:hover):-moz-window-inactive {
    opacity: 0.5 !important;
}

.tabbrowser-tab:is(:hover, .keyboard-focused-tab) .tab-icon-sound[pictureinpicture][soundplaying],
.tabbrowser-tab .tab-icon-sound[pictureinpicture][muted],
.tabbrowser-tab .tab-icon-sound[pictureinpicture]:hover {
    background-size: 12px !important;
    background-position: 1.2px center !important;
    background-repeat: no-repeat !important;
    list-style-image: none !important;
    border-radius: 50% !important;
}

.tabbrowser-tab .tab-icon-sound[pictureinpicture]:hover {
    opacity: 1 !important;
    background-color: var(--arrowpanel-dimmed) !important;
}

.tabbrowser-tab:is(:hover, .keyboard-focused-tab) .tab-icon-sound[pictureinpicture][soundplaying] {
    background-image: url(chrome://userchrome/content/audioUnmutedButton.svg) !important;
}

.tabbrowser-tab:is(:hover, .keyboard-focused-tab) .tab-icon-sound[pictureinpicture][muted],
.tabbrowser-tab:is(:hover, .keyboard-focused-tab)
    .tab-icon-sound[pictureinpicture][soundplaying][muted] {
    background-image: url(chrome://userchrome/content/audioMutedButton.svg) !important;
}

.tabbrowser-tab:is([image], [pinned]) > .tab-stack > .tab-content[attention]:not([selected="true"]),
.tabbrowser-tab > .tab-stack > .tab-content[pinned][titlechanged]:not([selected="true"]) {
    background-image: url(chrome://userchrome/content/indicator-tab-attention.svg);
    background-position: right 6px top 4px !important;
    background-repeat: no-repeat;
}

.tabbrowser-tab:not([pinned]):is(:hover, .keyboard-focused-tab)
    .tab-close-button:not(:hover, :active),
#tabbrowser-tabs[movingtab]
    .tabbrowser-tab[pinned][last-visible-tab]:is(:hover, .keyboard-focused-tab)
    .tab-close-button:not(:hover, :active),
.tabbrowser-tab[pinned][last-visible-tab]:is([justmoved], [tab-grouping], [tabdrop-samewindow])
    .tab-close-button,
.tabbrowser-tab[pinned][last-visible-tab]:is([justmoved], [tab-grouping], [tabdrop-samewindow]):is(:hover, .keyboard-focused-tab)
    .tab-close-button:not(:hover, :active) {
    opacity: 0.6 !important;
}

.tab-icon-image {
    display: block !important;
}

.tab-close-button {
    -moz-box-ordinal-group: 0;
    display: block !important;
    -moz-context-properties: fill, fill-opacity, stroke !important;
    position: relative;
    margin-inline: 0 -16px !important;
    width: 16px !important;
    height: 16px !important;
    padding: 0 !important;
    list-style-image: url(chrome://userchrome/content/textbox-clear.svg) !important;
}

.tab-icon-stack {
    z-index: -1;
}

/* tab buttons are animated with opacity and transformation */
.tabbrowser-tab:not(:hover, .keyboard-focused-tab, [tabdrop-samewindow]) .tab-close-button {
    transform: translateX(-15px) scale(0.5) !important;
}

#tabbrowser-tabs:not([movingtab])
    .tabbrowser-tab:not([tabdrop-samewindow], [justmoved])
    :is(.tab-close-button, .tab-icon-image, .tab-sharing-icon-overlay, .tab-throbber) {
    transition: 0.12s transform ease-in-out, 0.12s opacity ease-in-out !important;
}

.tab-icon-pending[pendingicon] {
    pointer-events: none !important;
    display: block !important;
    margin-right: -16px !important;
}

.tab-icon-image {
    display: block !important;
    position: relative !important;
}

.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [busy])
    :is(.tab-icon-image, .tab-sharing-icon-overlay) {
    opacity: 0 !important;
    pointer-events: none !important;
    transform: translateX(25px) scale(0.5) !important;
}

.tabbrowser-tab .tab-throbber:not([busy], [progress]) {
    opacity: 0 !important;
    pointer-events: none !important;
    transform: translateX(-15px) scale(0.5) !important;
}

.tabbrowser-tab:is(:hover, .keyboard-focused-tab, [tabdrop-samewindow]) .tab-throbber {
    opacity: 0 !important;
    pointer-events: none !important;
    transform: translateX(25px) scale(0.5) !important;
}

.tab-throbber[busy]::before {
    opacity: 0.8 !important;
    fill: var(--busy-throbber-fill) !important;
}

.tab-throbber[progress]::before {
    opacity: 1 !important;
    fill: var(--loading-throbber-fill) !important;
}

/* this pref enables a special loading throbber animation that spins instead of bouncing horizontally */
@supports (-moz-bool-pref("userChrome.tabs.new-loading-spinner-animation")) {
    .tab-throbber {
        display: block !important;
        position: relative !important;
    }

    .tab-throbber::before {
        content: "" !important;
        background-image: url(chrome://userchrome/content/loading-spinner.svg) !important;
        background-position: center !important;
        background-repeat: no-repeat !important;
        -moz-context-properties: fill, fill-opacity !important;
        width: 16px !important;
        height: 16px !important;
        animation: none !important;
        display: -moz-box !important;
    }

    .tab-throbber-tabslist[busy] {
        list-style-image: url(chrome://userchrome/content/loading-spinner.svg) !important;
        opacity: 0.8 !important;
        fill: var(--busy-throbber-fill) !important;
    }

    .tab-throbber-tabslist[progress] {
        list-style-image: url(chrome://userchrome/content/loading-spinner.svg) !important;
        opacity: 1 !important;
        fill: var(--loading-throbber-fill) !important;
    }
}

#tabbrowser-tabs:not([movingtab])
    .tabbrowser-tab:not([tabdrop-samewindow], [justmoved])
    .tab-content
    > .tab-icon-sound {
    transition: 0.12s transform ease-in-out, 0.12s opacity ease-in-out, 0.12s margin ease-in-out !important;
}

#tabbrowser-tabs
    .tab-content
    > .tab-icon-sound:not([soundplaying], [muted], [activemedia-blocked], [pictureinpicture]) {
    list-style-image: url(chrome://userchrome/content/audioUnmutedButton.svg) !important;
    display: -moz-inline-box !important;
    opacity: 0 !important;
    pointer-events: none !important;
    transform: translateX(16px) scale(0.5) !important;
    margin-right: -16px !important;
}

/* uncomment the line below if you want to hide the sound button on the selected tab
until the tab container is hovered. e.g. if your tab min size is small and you want more room to see the tab title.
by default the tab sound button shows on every tab if sound is playing or muted.
with the following line uncommented, the tab sound button shows on every non-selected tab if sound is playing or muted,
but only shows on the selected tab if 1) the tab is muted, or 2) the tabs area is hovered.
so in other words it won't show if audio is playing until you hover the general area of the tabs, but will show if audio is muted. */

/* #tabbrowser-tabs:not(:hover, :focus-within, :focus) .tabbrowser-tab[visuallyselected] .tab-content > .tab-icon-sound:not([pictureinpicture], [muted]), */
#tabbrowser-tabs:not(:hover, :focus-within, :focus)
    .tab-content
    > .tab-icon-sound:not([soundplaying], [muted], [activemedia-blocked], [pictureinpicture]) {
    opacity: 0 !important;
    pointer-events: none !important;
    transform: translateX(16px) scale(0.5) !important;
    margin-right: -16px !important;
}

/* when tab is being dragged/dropped, style it like it's hovered */
#tabbrowser-tabs[movingtab] .tabbrowser-tab[selected] .tab-icon-image {
    opacity: 0 !important;
}

#tabbrowser-tabs[movingtab] .tabbrowser-tab[selected] .tab-close-button {
    -moz-box-ordinal-group: 0 !important;
    display: -moz-box !important;
    position: relative !important;
    margin-right: -16px !important;
    z-index: 1 !important;
    visibility: visible !important;
    opacity: 0.6 !important;
}

#TabsToolbar .tabbrowser-tab {
    background-color: var(--lwt-accent-color) !important;
    padding: 0 !important;
}

/* hide the close button for pinned tabs. if the last visible tab is pinned, it doesn't hide the close button since the tab doesn't get shrunk in that case.
this requires you to make a pref in about:config and set it to true: "userChrome.tabs.pinned-tabs.close-buttons.disabled" */
@supports (-moz-bool-pref("userChrome.tabs.pinned-tabs.close-buttons.disabled")) {
    .tabbrowser-tab[pinned]:not([last-visible-tab]) .tab-close-button,
    #tabbrowser-tabs[movingtab] .tabbrowser-tab[pinned] .tab-close-button,
    .tabbrowser-tab[pinned]:is([justmoved], [tab-grouping], [tabdrop-samewindow])
        .tab-close-button {
        display: none !important;
    }

    #tabbrowser-tabs[movingtab] .tabbrowser-tab[pinned][selected] .tab-icon-image,
    .tabbrowser-tab[pinned]:is([justmoved], [tab-grouping], [tabdrop-samewindow]) .tab-icon-image,
    .tabbrowser-tab[pinned]:not([last-visible-tab]) .tab-throbber[busy],
    .tabbrowser-tab[pinned]:not([busy], [last-visible-tab])
        :is(.tab-icon-image, .tab-sharing-icon-overlay),
    .tabbrowser-tab[pinned][last-visible-tab]:is([justmoved], [tab-grouping], [tabdrop-samewindow])
        .tab-throbber[busy],
    .tabbrowser-tab[pinned][last-visible-tab]:not([busy]):is([justmoved], [tab-grouping], [tabdrop-samewindow])
        :is(.tab-icon-image, .tab-sharing-icon-overlay),
    #tabbrowser-tabs[movingtab] .tabbrowser-tab[pinned][last-visible-tab] .tab-throbber[busy],
    #tabbrowser-tabs[movingtab]
        .tabbrowser-tab[pinned][last-visible-tab]:not([busy])
        :is(.tab-icon-image, .tab-sharing-icon-overlay) {
        opacity: 1 !important;
        transform: none !important;
    }
}

/* for some reason the gradient on overflowing labels is variable in proton.
it gets bigger when you hover the tab, apparently because the close button gains a background in that condition.
this is ugly in general imo but it's useless with this theme in particular since we put the close button on the right,
meaning it doesn't overlap with the right side of the label at all, which is where the overflowing mask is applied.
so we make the mask size constant. */
.tabbrowser-tab {
    --tab-label-mask-size: 2em !important;
}

/* hide the sound icon while moving a pinned. does nothing without restoreTabSoundButton.uc.js */
.tabbrowser-tab[pinned]:not([last-visible-tab]) .tab-icon-sound,
#tabbrowser-tabs[movingtab] .tabbrowser-tab[pinned] .tab-icon-sound,
.tabbrowser-tab[pinned]:is([justmoved], [tab-grouping], [tabdrop-samewindow]) .tab-icon-sound {
    display: none !important;
}
